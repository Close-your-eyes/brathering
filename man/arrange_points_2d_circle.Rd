% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arrange_points_2d_circle.R
\name{arrange_points_2d_circle}
\alias{arrange_points_2d_circle}
\title{Evenly arrange n points in 2D space in circular shape}
\usage{
arrange_points_2d_circle(
  n,
  n_ring = NULL,
  n_points_per_ring = NULL,
  n_point_ring1 = NULL,
  n_point_increment = 5,
  inner_radius = 0.2,
  radius_increment = 0.2,
  center_x = 0,
  center_y = 0,
  return_polars = FALSE
)
}
\arguments{
\item{n}{number of points}

\item{n_ring}{number of rings for arrangement}

\item{n_points_per_ring}{number of points per ring; sum must equal n}

\item{n_point_ring1}{only define number of points on first ring; leave
remaining to internal heuristic}

\item{n_point_increment}{when setting n_point_ring1, increase of point on
outer rings}

\item{inner_radius}{radius of first ring}

\item{radius_increment}{radius increment per ring}

\item{center_x}{shift center in x-direction}

\item{center_y}{shift center in y-direction}

\item{return_polars}{also return radius and angle (polar coordinates),
next to cartesian coordinates}
}
\value{
matrix with 2 or 4 columns (cartesian without or with polar coordinates)
}
\description{
Evenly arrange n points in 2D space in circular shape
}
\examples{
# number of rings and points per ring are set by own heuristic
plot(arrange_points_2d_circle(100))
# set number of rings
plot(arrange_points_2d_circle(100, n_ring = 1))
plot(arrange_points_2d_circle(100, n_ring = 10))
# set number of points per ring; sum must equal n
plot(arrange_points_2d_circle(100, n_points_per_ring = c(5,20,40,35)))
# only define points for first ring; n_ring is ignored then
plot(arrange_points_2d_circle(100, n_point_ring1 = 50, n_ring = 6))
# but incrememt per ring can be adjusted
plot(arrange_points_2d_circle(100, n_point_ring1 = 2, n_point_increment = 40))
plot(arrange_points_2d_circle(100, center_x = 5)) # shift center
# ... and decrease radius increment
points(arrange_points_2d_circle(50, center_x = 5, radius_increment = 0.15),
       col = "red")
# 3rd column: radius, 4th column: angle in radiants
arrange_points_2d_circle(100, return_polars = TRUE)
}
