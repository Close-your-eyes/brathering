% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_portable_files.R
\name{make_portable_filepath}
\alias{make_portable_filepath}
\title{Make file paths portable}
\usage{
make_portable_filepath(
  x,
  allow = c("-", "."),
  repl = "_",
  urldecode = T,
  make_unique = F,
  repl_empty = "x",
  try_deunicode = F,
  make_path_portable = F
)
}
\arguments{
\item{x}{character vector of file paths}

\item{allow}{values to allow besides alnum}

\item{repl}{replacement for all not permitted values}

\item{urldecode}{also decode URL encoding}

\item{make_unique}{make filnames unique?}

\item{repl_empty}{replacement for elements that become empty strings during
the procedure}

\item{try_deunicode}{try the deunicode crate from Rust which handles
more characters}

\item{make_path_portable}{if FALSE only basename(x) is treated; if TRUE
also dirname(x) is treated}
}
\value{
character vector of modified paths
}
\description{
This a wrapper around make_portable_filename. dirname(x) and basename(x)
are treated separately.
}
\examples{
make_portable_filepath(x = file.path("my", "file", "path",
                                     c("näme1",
                                       "næme2",
                                       "name~3!",
                                       "name!!4",
                                       "...name§5___",
                                       "name/\\\\6",
                                       "name_βγ7",
                                       "name{(8)}",
                                       "name_9\%")))
make_portable_filepath("path\%20withspace/file!!1")
make_portable_filepath("path\%20withspace/file!!1", urldecode = F)
}
